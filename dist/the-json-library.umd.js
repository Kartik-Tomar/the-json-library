!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).jsonSchemaValidator=t()}(this,(function(){"use strict";function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t,r,n,o,i,a;return e(function(){if(a)return i;a=1;const e=function(){if(r)return t;r=1;const e=(t,r,a,s)=>{if(r.type&&!n(t,r.type))return s.push({path:a||"root",message:`Expected type ${r.type}, got ${Array.isArray(t)?"array":typeof t}`}),!1;if("object"===r.type&&"object"==typeof t&&null!==t)if(void 0!==r.additionalProperties&&r.additionalProperties){if("object"==typeof r.additionalProperties){const n=r.properties?Object.keys(r.properties):[];for(const o in t)if(!n.includes(o)){const n=a?`${a}.${o}`:o;e(t[o],r.additionalProperties,n,s)}}}else{const e=r.properties?Object.keys(r.properties):[];for(const r in t)e.includes(r)||s.push({path:a?`${a}.${r}`:r,message:`Additional property '${r}' is not allowed`})}if(r.required&&Array.isArray(r.required))for(const e of r.required)null!=t&&e in t||s.push({path:a?`${a}.${e}`:e,message:`Missing required property '${e}'`});if(r.properties&&"object"==typeof r.properties)for(const n in r.properties){const o=r.properties[n],i=a?`${a}.${n}`:n;t&&void 0!==t[n]&&e(t[n],o,i,s)}if("array"===r.type&&r.items&&Array.isArray(t))for(let n=0;n<t.length;n++){const o=a?`${a}[${n}]`:`[${n}]`;e(t[n],r.items,o,s)}return r.enum&&Array.isArray(r.enum)&&(r.enum.some((e=>i(e,t)))||s.push({path:a||"root",message:`Value must be one of the enum values: ${JSON.stringify(r.enum)}`})),"number"!==r.type&&"integer"!==r.type||(void 0!==r.minimum&&t<r.minimum&&s.push({path:a||"root",message:`Value ${t} is less than minimum ${r.minimum}`}),void 0!==r.maximum&&t>r.maximum&&s.push({path:a||"root",message:`Value ${t} is greater than maximum ${r.maximum}`})),"string"===r.type&&(void 0!==r.minLength&&t.length<r.minLength&&s.push({path:a||"root",message:`String length ${t.length} is less than minLength ${r.minLength}`}),void 0!==r.maxLength&&t.length>r.maxLength&&s.push({path:a||"root",message:`String length ${t.length} is greater than maxLength ${r.maxLength}`}),r.pattern&&!new RegExp(r.pattern).test(t)&&s.push({path:a||"root",message:`String does not match pattern: ${r.pattern}`})),r.format&&"string"===r.type&&(o(t,r.format)||s.push({path:a||"root",message:`Value does not match format: ${r.format}`})),0===s.length},n=(e,t)=>{if(null===e)return"null"===t;switch(t){case"string":return"string"==typeof e;case"number":return"number"==typeof e&&!isNaN(e);case"integer":return"number"==typeof e&&Number.isInteger(e);case"boolean":return"boolean"==typeof e;case"array":return Array.isArray(e);case"object":return"object"==typeof e&&!Array.isArray(e)&&null!==e;case"null":return null===e;default:return!0}},o=(e,t)=>{switch(t){case"email":return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e);case"date-time":return!isNaN(Date.parse(e));case"date":return/^\d{4}-\d{2}-\d{2}$/.test(e)&&!isNaN(Date.parse(e));case"uri":try{return new URL(e),!0}catch{return!1}default:return!0}},i=(e,t)=>{if(e===t)return!0;if("object"!=typeof e||"object"!=typeof t||null===e||null===t)return!1;const r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(const o of r)if(!n.includes(o)||!i(e[o],t[o]))return!1;return!0};return t=({schema:t,data:r})=>{const n=[];return e(r,t,"",n),{isValid:0===n.length,errors:n}}}(),s=function(){if(o)return n;o=1;const e=(t,r="")=>{if("object"!=typeof t||null===t)throw new Error(`Schema at ${r||"root"} must be an object`);if(t.properties){if("object"!=typeof t.properties||null===t.properties)throw new Error(`Properties at ${r||"root"} must be an object`);for(const n in t.properties)e(t.properties[n],r?`${r}.${n}`:n)}if(t.items&&e(t.items,r?`${r}.items`:"items"),void 0!==t.required){if(!Array.isArray(t.required))throw new Error(`Required at ${r||"root"} must be an array`);for(const e of t.required)if("string"!=typeof e)throw new Error(`Required items at ${r||"root"} must be strings`)}if(void 0!==t.enum&&!Array.isArray(t.enum))throw new Error(`Enum at ${r||"root"} must be an array`);if(void 0!==t.minimum&&"number"!=typeof t.minimum)throw new Error(`Minimum at ${r||"root"} must be a number`);if(void 0!==t.maximum&&"number"!=typeof t.maximum)throw new Error(`Maximum at ${r||"root"} must be a number`);if(void 0!==t.minLength&&(!Number.isInteger(t.minLength)||t.minLength<0))throw new Error(`MinLength at ${r||"root"} must be a non-negative integer`);if(void 0!==t.maxLength&&(!Number.isInteger(t.maxLength)||t.maxLength<0))throw new Error(`MaxLength at ${r||"root"} must be a non-negative integer`);if(void 0!==t.pattern)try{new RegExp(t.pattern)}catch(e){throw new Error(`Invalid regex pattern at ${r||"root"}: ${t.pattern}`)}};return n=t=>{let r;if("string"==typeof t)try{r=JSON.parse(t)}catch(e){throw new Error(`Invalid schema JSON: ${e.message}`)}else{if("object"!=typeof t||null===t)throw new Error("Schema must be a valid JSON object or string");r=t}return e(r),r}}();return i={validate:({schema:t,data:r})=>{try{const n=s(t);if(!n)throw new Error("Schema is required");if(!r)throw new Error("Data is required");const o=e({schema:n,data:r});if(!o.isValid)throw new Error(o?.errors?.map((e=>`${e?.path}: ${e?.message}`)));return!0}catch(e){return{valid:!1,error:e?.message}}},parseValidationSchema:s}}())}));
